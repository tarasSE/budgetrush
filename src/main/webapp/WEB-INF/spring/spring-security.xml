<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                      http://www.springframework.org/schema/beans/spring-beans.xsd
					  http://www.springframework.org/schema/security/oauth2
					  http://www.springframework.org/schema/security/spring-security-oauth2.xsd
					  http://www.springframework.org/schema/security
					  http://www.springframework.org/schema/security/spring-security.xsd">
	
	<context:component-scan base-package="com.provectus.budgetrush.controllers"/>
	
	<security:http pattern="/oauth/token" create-session="stateless"
		authentication-manager-ref="authenticationManager">
		<security:intercept-url pattern="/oauth/token"
			access='isAuthenticated()' />
		<security:anonymous enabled="false" />
		<security:http-basic entry-point-ref="clientAuthenticationEntryPoint" />
		<security:custom-filter ref="clientCredentialsTokenEndpointFilter"
			before="BASIC_AUTH_FILTER" />
		<security:access-denied-handler ref="oauthAccessDeniedHandler" />
		<security:csrf disabled="true" />
	</security:http>
	
	<security:global-method-security
		pre-post-annotations="enabled"
		secured-annotations="enabled">
		<!-- Enables custom expression handler -->
		<security:expression-handler ref="expressionHandler" />
	</security:global-method-security>
	
	<oauth:web-expression-handler id="expressionHandler" />
	
	<bean id="expressionHandler"
		class="org.springframework.security.oauth2.provider.expression.OAuth2WebSecurityExpressionHandler">
		<!-- To use hasPermission() in expressions, configure a PermissionEvaluator -->
		<property name="permissionEvaluator" ref="permissionEvaluator" />
		<property name="roleHierarchy" ref="roleHierarchy" />
	</bean>
	
	<bean id="permissionEvaluator" class="com.provectus.budgetrush.security.UserPermissionEvaluator"/>
	
	<bean id="roleHierarchy"
		class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
		<property name="hierarchy">
			<value>
				ROLE_ADMIN > ROLE_USER
			</value>
		</property>
	</bean>
	
	<bean id="oauthAuthenticationEntryPoint"
		class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
	</bean>

	<bean id="clientAuthenticationEntryPoint"
		class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
		<property name="realmName" value="springsec/client" />
		<property name="typeName" value="Basic" />
	</bean>

	<bean id="oauthAccessDeniedHandler"
		class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler">
	</bean>

	<bean id="clientCredentialsTokenEndpointFilter"
		class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
		<property name="authenticationManager" ref="authenticationManager" />
	</bean>

	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider
			user-service-ref="clientDetailsUserService" />
	</security:authentication-manager>

	<bean id="clientDetailsUserService"
		class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
		<constructor-arg ref="clientDetails" />
	</bean>

	<bean id="clientDetails" class="com.provectus.budgetrush.security.GuestService">
		<property name="id" value="rest_id" />
		<property name="secretKey" value="rest_key" />
	</bean>

	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<constructor-arg name="strength" value="11" />
	</bean>

	<security:authentication-manager id="userAuthenticationManager">
		<security:authentication-provider ref="customUserAuthenticationProvider">
		</security:authentication-provider>
	</security:authentication-manager>

	<bean id="customUserAuthenticationProvider"
		class="com.provectus.budgetrush.security.UserAuthenticationProvider">
	</bean>

	<oauth:authorization-server
		client-details-service-ref="clientDetails" token-services-ref="tokenServices">
		<oauth:authorization-code />
		<oauth:implicit />
		<oauth:refresh-token />
		<oauth:client-credentials />
		<oauth:password authentication-manager-ref="userAuthenticationManager" />
	</oauth:authorization-server>

	<oauth:resource-server id="resourceServerFilter"
		resource-id="springsec" token-services-ref="tokenServices" />

	<bean id="tokenStore"
		class="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore" />

	<bean id="tokenServices"
		class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<property name="tokenStore" ref="tokenStore" />
		<property name="supportRefreshToken" value="true" />
		<property name="accessTokenValiditySeconds" value="1800"></property>
		<property name="clientDetailsService" ref="clientDetails" />
	</bean>

</beans>