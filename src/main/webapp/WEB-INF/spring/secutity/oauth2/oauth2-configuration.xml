<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
       xmlns:security="http://www.springframework.org/schema/security"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
                      http://www.springframework.org/schema/beans/spring-beans.xsd
					  http://www.springframework.org/schema/security/oauth2
					  http://www.springframework.org/schema/security/spring-security-oauth2.xsd
					  http://www.springframework.org/schema/security
					  http://www.springframework.org/schema/security/spring-security.xsd">

	<security:http pattern="/oauth/token" create-session="stateless"
		authentication-manager-ref="authenticationManager">
		<security:intercept-url pattern="/oauth/token"
			access='isAuthenticated()' requires-channel="https"/>
		<security:anonymous enabled="false" />
		<security:http-basic entry-point-ref="clientAuthenticationEntryPoint" />
		<security:custom-filter ref="clientCredentialsTokenEndpointFilter"
			before="BASIC_AUTH_FILTER" />
		<security:access-denied-handler ref="oauthAccessDeniedHandler" />
		<security:csrf disabled="true" />
		<security:headers>
			<security:hsts

					include-subdomains="true"
					max-age-seconds=" 63072000" />
		</security:headers>
	</security:http>
	
	<bean id="oauthAuthenticationEntryPoint"
		class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
	</bean>

	<bean id="clientAuthenticationEntryPoint"
		class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
		<property name="realmName" value="springsec/client" />
		<property name="typeName" value="Basic" />
	</bean>

	<bean id="oauthAccessDeniedHandler"
		class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler">
	</bean>

	<bean id="clientCredentialsTokenEndpointFilter"
		class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
		<property name="authenticationManager" ref="authenticationManager" />
	</bean>

	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider
			user-service-ref="clientDetailsUserService" />
	</security:authentication-manager>

	<oauth:authorization-server
		client-details-service-ref="clientDetails" token-services-ref="tokenServices">
		<oauth:authorization-code />
		<oauth:implicit />
		<oauth:refresh-token />
		<oauth:client-credentials />
		<oauth:password authentication-manager-ref="userAuthenticationManager" />
	</oauth:authorization-server>

	<oauth:resource-server id="resourceServerFilter"
		resource-id="springsec" token-services-ref="tokenServices" />

	<bean id="tokenStore"
		class="org.springframework.security.oauth2.provider.token.store.JdbcTokenStore">
		<constructor-arg ref="dataSource" />
	</bean>

	<bean id="tokenServices"
		class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<property name="tokenStore" ref="tokenStore" />
		<property name="supportRefreshToken" value="true" />
		<property name="accessTokenValiditySeconds" value="1800"></property>
		<property name="clientDetailsService" ref="clientDetails" />
	</bean>
</beans>					  